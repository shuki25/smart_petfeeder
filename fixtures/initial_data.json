[{"model": "app.animaltype", "pk": 1, "fields": {"name": "Cat"}}, {"model": "app.animaltype", "pk": 2, "fields": {"name": "Dog"}}, {"model": "app.animaltype", "pk": 3, "fields": {"name": "Rabbit"}}, {"model": "app.animalsize", "pk": 1, "fields": {"name": "Small"}}, {"model": "app.animalsize", "pk": 2, "fields": {"name": "Medium"}}, {"model": "app.animalsize", "pk": 3, "fields": {"name": "Large"}},{"model": "app.motortiming", "pk": 1, "fields": {"feed_amount": 0.25, "motor_duration": 5, "interrupter_count": 7}}, {"model": "app.motortiming", "pk": 2, "fields": {"feed_amount": 0.333, "motor_duration": 7, "interrupter_count": 9}}, {"model": "app.motortiming", "pk": 3, "fields": {"feed_amount": 0.5, "motor_duration": 9, "interrupter_count": 13}}, {"model": "app.motortiming", "pk": 4, "fields": {"feed_amount": 1.0, "motor_duration": 15, "interrupter_count": 25}}, {"model": "app.motortiming", "pk": 5, "fields": {"feed_amount": 0.125, "motor_duration": 4, "interrupter_count": 4}}, {"model": "app.motortiming", "pk": 6, "fields": {"feed_amount": 0.667, "motor_duration": 13, "interrupter_count": 17}}, {"model": "app.motortiming", "pk": 7, "fields": {"feed_amount": 0.625, "motor_duration": 10, "interrupter_count": 16}}, {"model": "app.motortiming", "pk": 8, "fields": {"feed_amount": 0.875, "motor_duration": 13, "interrupter_count": 22}}, {"model": "app.motortiming", "pk": 9, "fields": {"feed_amount": 0.375, "motor_duration": 7, "interrupter_count": 10}}, {"model": "app.motortiming", "pk": 10, "fields": {"feed_amount": 0.75, "motor_duration": 12, "interrupter_count": 19}}, {"model": "app.feedermodel", "pk": 1, "fields": {"brand_name": "Petnet.io", "model_name": "First Generation", "image_path": "img/petnet-1g.jpg", "hopper_capacity": 10.0, "has_hopper_sensor": true, "has_motor_sensor": true}}, {"model": "app.feedermodel", "pk": 2, "fields": {"brand_name": "Petnet.io", "model_name": "Second Generation (Black)", "image_path": "img/petnet-2g-black.jpg", "hopper_capacity": 7.0, "has_hopper_sensor": true, "has_motor_sensor": true}}, {"model": "app.feedermodel", "pk": 3, "fields": {"brand_name": "Petnet.io", "model_name": "Second Generation (White)", "image_path": "img/petnet-2g-white.jpg", "hopper_capacity": 7.0, "has_hopper_sensor": true, "has_motor_sensor": true}}, {"model": "app.articlecategory", "pk": 1, "fields": {"name": "Blog"}}, {"model": "app.article", "pk": 1, "fields": {"category": 1, "title": "Smart PetFeeder Project", "display_title": "Smart <span class=\"text-warning\">PetFeeder</span> Project", "author": "Josh Butler, MD, MHI", "content": "As an owner of a now-defunct PetNet.io Smart Feeder, it became a personal project when I found out that the company went out of business and the feeder stopped functioning. It turns out that the automatic feeder is cloud-based; once the business went under, the cloud server went offline, and so did the feeder. Of course, I was upset about it because I spent $199 when I bought it, and I expected it to operate until the machine broke down due to wear and tear. I am sure the other PetNet.io feeder owners had the same sentiments.\r\n\r\nI scoured the internet finding simple solutions to this problem, the search turned up a few hacks, but they were just a hack; it wasn't something I wanted. One hack would just install a dumb relay controlled with an app from your phone. Unfortunately, the amount of food dispensed wasn't accurate; it was based on a timer, and the amount dispensed would vary each time; nothing was consistent. The size of pebbles does matter; the larger they are, the motor runs longer to drop the feed exactly how much you wanted it to.\r\n\r\nSince my profession is in computer science, I have the skills necessary to write a firmware, which essentially is a small program that processes the input and output of the control board. As well as developing a website to monitor and communicate with control boards to update the feeding schedule, portion size, and manage notifications. Initially, I used Raspberry Pi3 B+, a small pocket-sized computer capable of interacting with the pet feeder hardware, getting necessary inputs from sensors and outputs to a display, and controlling the small DC motor that dispenses the feed.\r\n\r\nAfter a significant amount of work being done with the coding and getting the basic functionality to work, I realized how big and clunky was the Raspberry Pi3, especially when moving the feeder around; it would slide around inside the feeder, pulling the wires apart rendering the feeder useless. So, I researched the idea of electrical engineering design and the internet of things (IoT) solutions. I concluded that it would be the best approach to solving this problem because it allowed me to design a board that you can fasten down to the feeder mounting points.\r\n\r\nWith zero background in electrical engineering (EE), I started watching many, many YouTube videos on EE and printed circuit board design. So, after watching these videos, I fell into a huge rabbit hole and spent hours designing my own control board. Unfortunately, I didn't have any equipment to get started with designing a circuit board, so I started buying essentials to set up my own EE workbench. I probably spent close to $2,000 on basic electrical engineer equipment (soldering station, oscilloscope, hot air reflow station, a sturdy workbench, etc.), supplies, and parts.\r\n\r\nAfter weeks of designing a schematic and printed circuit board (PCB) pictured above in KiCad (a free, open-source electrical engineering CAD software), I sent the design to a fabricating house in China. While I waited for the boards to arrive, I wrote a custom firmware for ESP32, a microprocessor I selected for the control board. After two weeks of waiting for the boards to arrive. I was nervous when it arrived, hoping that my initial design would work. I soldered on the connectors to the board, connected the wires, and uploaded the firmware I wrote. The firmware booted up without any hitch. I ran a bunch of tests to check each input and output on the board. I discovered a few problems with the board design. However, my initial design was a quasi-fail; I spent a few weeks troubleshooting the printed circuit board, fixing the schematic, and updating the PCB layout. It took three iterations of manufacturing control boards before the circuit board was free of blunders.\r\n\r\nThe next chapter in this project is to continue improving the control board firmware by adding more features and updating the website to support added features. Finally, I hope to create a full package, offering a feature-rich application with detailed logs and a flexible feeding schedule.", "is_pinned": true, "is_visible": true, "published_at": "2022-05-17T22:47:11Z", "created_at": "2022-05-17T22:47:11Z", "modified_at": "2022-05-17T23:03:54.315Z"}}]